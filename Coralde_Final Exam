import java.util.Stack;

public class Main {
    public static void main(String[] args) {
        //  creature names and power levels
        String[] creatureNames = {"Dragon", "Griffin", "Unicorn", "Phoenix", "Centaur"};
        int[] powerScores = {95, 88, 78, 92, 85};

        // Bubble Sort
        //descending order
        System.out.println("*** Bubble Sort: Descending Order by Power Level ***");
        sortByDescendingOrder(creatureNames, powerScores);
        displayCreatures(creatureNames, powerScores);

        // Selection Sort
        // Ascending order
        System.out.println("\n*** Selection Sort: Ascending Order by Power Level ***");
        sortByAscendingOrder(creatureNames, powerScores);
        displayCreatures(creatureNames, powerScores);

        // Stack usage
        System.out.println("\n*** Stack Implementation: Popping Creatures ***");
        Stack<String> creatureStack = pushCreaturesToStack(creatureNames, powerScores);
        popCreaturesFromStack(creatureStack);
    }

    // Bubble sort to arrange power levels in descending order
    public static void sortByDescendingOrder(String[] names, int[] scores) {
        int size = scores.length;
        for (int i = 0; i < size - 1; i++) {
            for (int j = 0; j < size - i - 1; j++) {
                if (scores[j] < scores[j + 1]) {
                    // Swap power levels
                    int tempScore = scores[j];
                    scores[j] = scores[j + 1];
                    scores[j + 1] = tempScore;

                    // Swap creature names
                    String tempName = names[j];
                    names[j] = names[j + 1];
                    names[j + 1] = tempName;
                }
            }
        }
    }

    //Selection sort to arrange power levels in ascending order
    public static void sortByAscendingOrder(String[] names, int[] scores) {
        int size = scores.length;
        for (int i = 0; i < size - 1; i++) {
            int minIndex = i;
            for (int j = i + 1; j < size; j++) {
                if (scores[j] < scores[minIndex]) {
                    minIndex = j;
                }
            }
            // Swap power levels
            int tempScore = scores[minIndex];
            scores[minIndex] = scores[i];
            scores[i] = tempScore;

            // Swap creature names
            String tempName = names[minIndex];
            names[minIndex] = names[i];
            names[i] = tempName;
        }
    }

    //Make a stack with creature names and their power levels
    public static Stack<String> pushCreaturesToStack(String[] names, int[] scores) {
        Stack<String> stack = new Stack<>();
        for (int i = 0; i < names.length; i++) {
            stack.push(names[i] + " - " + scores[i]);
        }
        return stack;
    }

    // Pop and display creatures from the stack
    public static void popCreaturesFromStack(Stack<String> stack) {
        while (!stack.isEmpty()) {
            System.out.println("Popped: " + stack.pop());
        }
    }

    // Display the list of creatures along with their power levels
    public static void displayCreatures(String[] names, int[] scores) {
        for (int i = 0; i < names.length; i++) {
            System.out.println(names[i] + " - " + scores[i]);
        }
    }
}
